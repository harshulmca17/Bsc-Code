<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED offset CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED format CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="Q3.cpu" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="adr" type="required" numBits="12" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field1db512c">
	</Field>
	<Field name="unused" type="ignored" numBits="12" relativity="absolute" signed="true" offset="0" defaultValue="0" id="Field17a7cab">
	</Field>
	<Field name="op" type="required" numBits="4" relativity="absolute" signed="false" offset="0" defaultValue="0" id="Field96da95">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="AC" width="16" id="module.Register16e9f9c" />
	<Register name="AR" width="12" id="module.Registerf7f5ac" />
	<Register name="DR" width="16" id="module.Registerd85e7d" />
	<Register name="E" width="1" id="module.Register2668c1" />
	<Register name="Halt-bit" width="1" id="module.Register18994e6" />
	<Register name="IR" width="16" id="module.Registeree4dae" />
	<Register name="PC" width="12" id="module.Register35c1b8" />
	<Register name="STATUS" width="3" id="module.Register1e8cedf" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="CARRY" bit="0" register="module.Register2668c1" halt="false" id="module.ConditionBit395ce0" />
	<ConditionBit name="Halt-Bit" bit="0" register="module.Register18994e6" halt="true" id="module.ConditionBit46e5f4" />

	<!--............. rams ..........................-->
	<RAM name="RAM" length="1024" cellSize="8" id="module.RAMaec445" />

	<!--............. set ...........................-->
	<Set name="AC&lt;--0" register="module.Register16e9f9c" start="0" numBits="1" value="0" id="microinstruction.CpusimSet3de71" />
	<Set name="E&lt;--0" register="module.Register2668c1" start="0" numBits="1" value="0" id="microinstruction.CpusimSete9ac58" />
	<Set name="Halt" register="module.Register18994e6" start="0" numBits="1" value="1" id="microinstruction.CpusimSet17d41a" />

	<!--............. test ..........................-->
	<Test name="if(AC&lt;0)" register="module.Register16e9f9c" start="0" numBits="0" comparison="EQ" value="0" omission="1" id="microinstruction.Testf3c34d" />
	<Test name="if(DR==0)" register="module.Registerd85e7d" start="0" numBits="16" comparison="NE" value="0" omission="1" id="microinstruction.Test896d74" />

	<!--............. increment .....................-->
	<Increment name="Inc AR" register="module.Registerf7f5ac" delta="2" id="microinstruction.Increment1bd9311" />
	<Increment name="Inc DR" register="module.Registerd85e7d" delta="1" id="microinstruction.Increment1782eb8" />
	<Increment name="Inc Pc" register="module.Register35c1b8" delta="2" id="microinstruction.Increment14f6cb1" />

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<Logical name="AND" type="AND" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" id="microinstruction.Logical15b964a" />
	<Logical name="NOT AC" type="NOT" source1="module.Register16e9f9c" source2="module.Register16e9f9c" destination="module.Register16e9f9c" id="microinstruction.Logical1d358f4" />
	<Logical name="NOT E" type="NOT" source1="module.Register2668c1" source2="module.Register2668c1" destination="module.Register2668c1" id="microinstruction.Logical104f13f" />
	<Logical name="OR" type="OR" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" id="microinstruction.Logical1bf06ec" />

	<!--............. arithmetic ....................-->
	<Arithmetic name="Add Ac+Dr" type="ADD" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" carryBit="module.ConditionBit395ce0" id="microinstruction.Arithmetic8d32d7" />
	<Arithmetic name="Div Ac/Dr" type="DIVIDE" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" id="microinstruction.Arithmetic1a6de0a" />
	<Arithmetic name="Mul Ac*Dr" type="MULTIPLY" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" id="microinstruction.Arithmetic1935d08" />
	<Arithmetic name="Sub Ac-DR" type="SUBTRACT" source1="module.Register16e9f9c" source2="module.Registerd85e7d" destination="module.Register16e9f9c" id="microinstruction.Arithmetic3ea3b0" />

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<TransferRtoR name="AC TO DR" source="module.Register16e9f9c" srcStartBit="0" dest="module.Registerd85e7d" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR14a266a" />
	<TransferRtoR name="AR TO PC" source="module.Registerf7f5ac" srcStartBit="0" dest="module.Register35c1b8" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR13e787" />
	<TransferRtoR name="DR TO AC" source="module.Registerd85e7d" srcStartBit="0" dest="module.Register16e9f9c" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR1739910" />
	<TransferRtoR name="DR TO IR" source="module.Registerd85e7d" srcStartBit="0" dest="module.Registeree4dae" destStartBit="0" numBits="16" id="microinstruction.TransferRtoR1826d" />
	<TransferRtoR name="DR TO PC" source="module.Registerd85e7d" srcStartBit="0" dest="module.Register35c1b8" destStartBit="0" numBits="12" id="microinstruction.TransferRtoRe29cb1" />
	<TransferRtoR name="IR TO AR" source="module.Registeree4dae" srcStartBit="4" dest="module.Registerf7f5ac" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR1966e75" />
	<TransferRtoR name="IR TO PC" source="module.Registeree4dae" srcStartBit="0" dest="module.Register35c1b8" destStartBit="0" numBits="12" id="microinstruction.TransferRtoR6ec58e" />
	<TransferRtoR name="PC TO AR" source="module.Register35c1b8" srcStartBit="0" dest="module.Registerf7f5ac" destStartBit="0" numBits="12" id="microinstruction.TransferRtoRfe3c84" />
	<TransferRtoR name="PC TO DR" source="module.Register35c1b8" srcStartBit="0" dest="module.Registerd85e7d" destStartBit="0" numBits="12" id="microinstruction.TransferRtoRe00c92" />

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<Decode name="DECODE-IR" ir="module.Registeree4dae" id="microinstruction.Decoded8f5f5" />

	<!--............. set condition bit .............-->
	<SetCondBit name="Halt-Bit" bit="module.ConditionBit46e5f4" value="1" id="microinstruction.SetCondBit1bdf276" />

	<!--............. io ............................-->
	<IO name="input-int-&gt;acc" direction="input" type="integer" buffer="module.Register16e9f9c" connection="[console]" id="microinstruction.IOf43cb1" />
	<IO name="output-acc-&gt;int" direction="output" type="integer" buffer="module.Register16e9f9c" connection="[console]" id="microinstruction.IO222a1" />

	<!--............. memory access .................-->
	<MemoryAccess name="Dr -&gt; M[Ar]" direction="write" memory="module.RAMaec445" data="module.Registerd85e7d" address="module.Registerf7f5ac" id="microinstruction.MemoryAccess1ba0049" />
	<MemoryAccess name="M[Ar] -&gt; Dr" direction="read" memory="module.RAMaec445" data="module.Registerd85e7d" address="module.Registerf7f5ac" id="microinstruction.MemoryAccess10c7dca" />

	<!--............. end ...........................-->
	<End id="microinstruction.End8cda6e" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
		<Microinstruction microRef="microinstruction.TransferRtoRfe3c84" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.TransferRtoR1826d" />
		<Microinstruction microRef="microinstruction.Increment14f6cb1" />
		<Microinstruction microRef="microinstruction.Decoded8f5f5" />
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="Stop" opcode="b" format="op unused" >
		<Microinstruction microRef="microinstruction.SetCondBit1bdf276" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="CME" opcode="7" format="op unused" >
		<Microinstruction microRef="microinstruction.Logical104f13f" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="CLE" opcode="f" format="op unused" >
		<Microinstruction microRef="microinstruction.CpusimSete9ac58" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="CMA" opcode="e" format="op unused" >
		<Microinstruction microRef="microinstruction.Logical1d358f4" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="CLA" opcode="d" format="op unused" >
		<Microinstruction microRef="microinstruction.CpusimSet3de71" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="ISZ" opcode="c" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Increment1782eb8" />
		<Microinstruction microRef="microinstruction.MemoryAccess1ba0049" />
		<Microinstruction microRef="microinstruction.Test896d74" />
		<Microinstruction microRef="microinstruction.Increment14f6cb1" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="BUN" opcode="a" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.TransferRtoR13e787" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Load" opcode="9" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.TransferRtoR1739910" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Store" opcode="8" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.TransferRtoR14a266a" />
		<Microinstruction microRef="microinstruction.MemoryAccess1ba0049" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="And" opcode="6" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Logical15b964a" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Multiply" opcode="5" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Arithmetic1935d08" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Divide" opcode="4" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Arithmetic1a6de0a" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Subtract" opcode="3" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Arithmetic3ea3b0" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="Add" opcode="2" format="op adr" >
		<Microinstruction microRef="microinstruction.TransferRtoR1966e75" />
		<Microinstruction microRef="microinstruction.MemoryAccess10c7dca" />
		<Microinstruction microRef="microinstruction.Arithmetic8d32d7" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="write" opcode="1" format="op unused" >
		<Microinstruction microRef="microinstruction.IO222a1" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<MachineInstruction name="read" opcode="0" format="op unused " >
		<Microinstruction microRef="microinstruction.IOf43cb1" />
		<Microinstruction microRef="microinstruction.End8cda6e" />
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="module.RAMaec445" startingAddress="34" />

	<!--............. module window info ............-->
	<ModuleWindowsInfo>
		<RAMWindowInfo ram="module.RAMaec445" cellSize="2" contentsbase="Hexadecimal" addressbase="Hexadecimal" 
			top="4" left="854" width="450" height="450" />
		<RegisterWindowInfo base="Hexadecimal" 
			top="3" left="534" width="300" height="234" />
	</ModuleWindowsInfo>

</Machine>
